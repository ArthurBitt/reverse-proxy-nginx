worker_processes ${WORKER_PROCESS};

events {
    worker_connections ${WORKER_CONNECTIONS};
}

http {
    sendfile on;

    # Limita o tamanho de cada requisição (unit: MB)
    client_max_body_size ${SIZE_LIMIT_PER_REQUEST};

    # Oculta versão do Nginx
    server_tokens off;

    # Define zona de controle de conexões simultâneas por IP (compartilhamento de memória)
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:${CONN_LIMIT_ZONE_SIZE};

    # Define uma zona de limite de requisições por IP
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:${REQ_LIMIT_ZONE_SIZE} rate=${RATE_LIMIT_PER_IP};

    # Suporte a WebSockets
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    proxy_read_timeout ${READ_TIMEOUT}; #Tempo máximo que o Nginx espera para ler uma resposta completa do servidor
    proxy_connect_timeout ${CONNECT_TIMEOUT}; #Tempo máximo que o Nginx espera para estabelecer a conexão TCP 
    proxy_send_timeout ${SEND_TIMEOUT}; #Tempo máximo que o Nginx espera para enviar dados para o backend
 
    server {
        listen ${NGINX_LISTEN_PORT};
        server_name ${APPLICATION_PUBLIC_HOST};

        # Bloqueia requisições sem cabeçalho Host, retornando 400 Bad Request com mensagem customizada
        if ($host = "") {
            return 400 "NGINX-PROXY: Requisição inválida: cabeçalho Host obrigatório.";
        }

        # Limita conexões simultâneas por IP
        limit_conn conn_limit_per_ip ${SIMULTANEOUS_CONNECTION_PER_IP};

        # Limita requisições por IP (burst e comportamento)
        limit_req zone=req_limit_per_ip burst=${RATE_BURST} ${RATE_NODELAY};

        # Bloqueia padrões comuns de SQL injection e path traversal
        location ~* "(\b(select|union|insert|delete|update|drop|create|alter|cast|sleep|benchmark)\b|\*|%27|%22|%3C|%3E|%00|--|;|/\*|\*/|@@|\@)" {
            return 403 "NGINX-PROXY: Padrão de injeção SQL detectado.";
        }

        # Bloqueia arquivos sensíveis
        location ~ /\.(env|git|htaccess|htpasswd|DS_Store)$ {
            return 403 "NGINX-PROXY: Acesso negado a arquivos sensíveis.";
        }

        # Bloqueia diretórios comuns de exploração
        location ~* ^/(vendor|phpunit|cgi-bin|config|tests|backup|ws|cms)/ {
            return 403 "NGINX-PROXY: Acesso negado a diretórios restritos.";
        }

        # Bloqueia arquivos específicos explorados por scripts
        location ~* /eval-stdin\.php$ {
            return 403 "NGINX-PROXY: Script bloqueado.";
        }

        location ~* "(base64_decode|shell_exec|php://|eval\()" {
             return 403 "NGINX-PROXY: Expressão maliciosa bloqueada.";
         }

        location / {
            # proxy_pass para a aplicação
            proxy_pass http://${APPLICATION_INTERNAL_HOST}:${APPLICATION_PORT};

            # Define headers importantes de proxy e segurança
            proxy_set_header Host $host; # informa domain utilizado
            proxy_set_header X-Real-IP $remote_addr; # Passa o IP real de quem está fazendo a requisição
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Lista com os IPs por onde a requisição passou
            proxy_set_header X-Frame-Options DENY; # Impede clickjacking
            proxy_set_header X-Content-Type-Options nosniff; # Impede execução indevida de arquivos como scripts
            proxy_set_header Referrer-Policy no-referrer; # Não envia origem da requisição
            proxy_set_header Connection ""; # Evita problemas com keep-alive

            # Headers de segurança configuráveis por ENV
            add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *; worker-src 'self' blob: *";
            add_header Permissions-Policy "geolocation=(self 'https://${APPLICATION_PUBLIC_HOST}'), microphone=(), camera=()";
            add_header Strict-Transport-Security "max-age=${HSTS_MAX_AGE}; includeSubDomains"; #Obriga o navegador a sempre usar HTTPS
            add_header Cross-Origin-Embedder-Policy same-origin; # só embute conteúdo do mesmo domínio.
            add_header Cross-Origin-Opener-Policy same-origin; # separa o contexto de navegação de outros sites.
            add_header Cross-Origin-Resource-Policy same-origin; # só permite que recursos do mesmo domínio sejam carregados.
            add_header X-Permitted-Cross-Domain-Policies none;  # Impede que o navegador permita políticas de compartilhamento de arquivos entre domínios
            add_header X-XSS-Protection "1; mode=block"; # Ativa proteção contra XSS nos navegadores mais antigos
        }
    }
}